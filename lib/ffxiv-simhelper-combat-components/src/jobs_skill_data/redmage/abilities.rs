use crate::event::ffxiv_event::FfxivEvent::{ApplyBuff, ApplyRaidBuff};
use crate::event_ticker::PercentType;
use crate::id_entity::IdEntity;
use crate::jobs_skill_data::{CasterGlobalSkill, PotionSkill};
use crate::rotation::SkillTable;
use crate::skill::attack_skill::AttackSkill;
use crate::skill::use_type::UseType;
use crate::skill::ResourceRequirements::{Resource, UseBuff};
use crate::skill::{make_skill_table, ResourceTable};
use crate::status::buff_status::BuffStatus;
use crate::status::status_info::StatusInfo;
use crate::types::PlayerIdType;
use std::collections::HashMap;

const PROC_PERCENT: PercentType = 50;

pub(crate) struct RedmageDatabase {
    pub(crate) jolt_iii: AttackSkill,
    pub(crate) veraero_iii: AttackSkill,
    pub(crate) veraero_iii_swift: AttackSkill,
    pub(crate) veraero_iii_dual: AttackSkill,
    pub(crate) veraero_iii_accel: AttackSkill,
    pub(crate) verthunder_iii_swift: AttackSkill,
    pub(crate) verthunder_iii_dual: AttackSkill,
    pub(crate) verthunder_iii_accel: AttackSkill,
    pub(crate) verstone: AttackSkill,
    pub(crate) verfire: AttackSkill,
    pub(crate) fleche: AttackSkill,
    pub(crate) contre_sixte: AttackSkill,
    pub(crate) corps_a_corps: AttackSkill,
    pub(crate) engagement: AttackSkill,
    pub(crate) embolden: AttackSkill,
    pub(crate) enchanted_riposte: AttackSkill,
    pub(crate) enchanted_zwerchhau: AttackSkill,
    pub(crate) enchanted_redoublement: AttackSkill,
    pub(crate) verholy: AttackSkill,
    pub(crate) verflare: AttackSkill,
    pub(crate) acceleration: AttackSkill,
    pub(crate) manafication: AttackSkill,
    pub(crate) scorch: AttackSkill,
    pub(crate) resolution: AttackSkill,
    pub(crate) vice_of_thorns: AttackSkill,
    pub(crate) grand_impact: AttackSkill,
    pub(crate) prefulgence: AttackSkill,
    pub(crate) swiftcast: AttackSkill,
    pub(crate) manafication_riposte: AttackSkill,
    pub(crate) manafication_zwerchhau: AttackSkill,
    pub(crate) manafication_redoublement: AttackSkill,
    pub(crate) manafication_verholy: AttackSkill,
    pub(crate) manafication_verflare: AttackSkill,
    pub(crate) manafication_scorch: AttackSkill,
    pub(crate) manafication_resolution: AttackSkill,

    pub(crate) acceleration_buff: BuffStatus,
    pub(crate) dualcast_buff: BuffStatus,
    pub(crate) verstone_ready: BuffStatus,
    pub(crate) verfire_ready: BuffStatus,
    pub(crate) finish_ready: BuffStatus,

    pub(crate) potion: AttackSkill,
}

impl RedmageDatabase {
    pub(crate) fn new(player_id: PlayerIdType) -> Self {
        let caster_skills = CasterGlobalSkill::new(player_id);

        let embolden_buff: BuffStatus = {
            BuffStatus {
                id: 1800,
                name: String::from("Embolden"),
                owner_id: player_id,
                duration_left_millisecond: 0,
                status_info: vec![StatusInfo::DamagePercent(5)],
                duration_millisecond: 20000,
                is_raidwide: true,
                stacks: 1,
                max_stacks: 1,
                trigger_proc_event_on_gcd: vec![],
            }
        };
        let manafication_buff: BuffStatus = BuffStatus {
            id: 1801,
            name: String::from("Manafication"),
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 15000,
            is_raidwide: false,
            stacks: 6,
            max_stacks: 6,
            trigger_proc_event_on_gcd: vec![],
        };
        let acceleration_buff: BuffStatus = BuffStatus {
            id: 1802,
            name: String::from("Acceleration"),
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 20000,
            is_raidwide: false,
            stacks: 1,
            max_stacks: 1,
            trigger_proc_event_on_gcd: vec![],
        };
        let dualcast_buff: BuffStatus = BuffStatus {
            id: 1803,
            name: String::from("Dualcast"),
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 15000,
            is_raidwide: false,
            stacks: 1,
            max_stacks: 1,
            trigger_proc_event_on_gcd: vec![],
        };
        let verstone_ready: BuffStatus = BuffStatus {
            id: 1804,
            name: String::from("Verstone Ready"),
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 30000,
            is_raidwide: false,
            stacks: 1,
            max_stacks: 1,
            trigger_proc_event_on_gcd: vec![],
        };
        let verfire_ready: BuffStatus = BuffStatus {
            id: 1805,
            name: String::from("Verfire Ready"),
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 30000,
            is_raidwide: false,
            stacks: 1,
            max_stacks: 1,
            trigger_proc_event_on_gcd: vec![],
        };

        let finish_ready: BuffStatus = BuffStatus {
            id: 1806,
            name: String::from("Finish Ready"),
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 30000,
            is_raidwide: false,
            stacks: 1,
            max_stacks: 1,
            trigger_proc_event_on_gcd: vec![],
        };
        let thorned_flourish: BuffStatus = BuffStatus {
            id: 1807,
            name: String::from("Thorned Flourish"),
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 30000,
            is_raidwide: false,
            stacks: 1,
            max_stacks: 1,
            trigger_proc_event_on_gcd: vec![],
        };
        let grand_impact_ready: BuffStatus = BuffStatus {
            id: 1808,
            name: String::from("Grand Impact Ready"),
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 30000,
            is_raidwide: false,
            stacks: 1,
            max_stacks: 1,
            trigger_proc_event_on_gcd: vec![],
        };
        let magicked_swordplay: BuffStatus = BuffStatus {
            id: 1810,
            name: String::from("Magicked Swordplay"),
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 30000,
            is_raidwide: false,
            stacks: 3,
            max_stacks: 3,
            trigger_proc_event_on_gcd: vec![],
        };

        let dualcast_buff_apply =
            ApplyBuff(player_id, player_id, dualcast_buff.clone(), 15000, 15000, 0);
        let verstone_ready_apply = ApplyBuff(
            player_id,
            player_id,
            verstone_ready.clone(),
            30000,
            30000,
            0,
        );
        let verfire_ready_apply =
            ApplyBuff(player_id, player_id, verfire_ready.clone(), 30000, 30000, 0);

        let jolt_iii: AttackSkill = AttackSkill {
            id: 1800,
            name: String::from("Jolt III"),
            player_id,
            use_type: UseType::UseOnTarget,
            potency: 360,
            trait_percent: 130,
            additional_skill_events: vec![dualcast_buff_apply.clone()],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 1800,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![],
            resource_created: HashMap::from([(0, 2), (1, 2)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
        };
        let veraero_iii: AttackSkill = AttackSkill {
            id: 1801,
            name: String::from("Veraero III"),
            player_id,
            potency: 420,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![(verstone_ready_apply.clone(), PROC_PERCENT)],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 5000,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![],
            resource_created: HashMap::from([(0, 6)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let veraero_iii_swift: AttackSkill = AttackSkill {
            id: 1802,
            name: String::from("Veraero III"),
            player_id,
            potency: 420,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![(verstone_ready_apply.clone(), PROC_PERCENT)],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(caster_skills.swiftcast_buff.get_id())],
            resource_created: HashMap::from([(0, 6)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let veraero_iii_dualcast: AttackSkill = AttackSkill {
            id: 1803,
            name: String::from("Veraero III"),
            player_id,
            potency: 420,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![(verstone_ready_apply.clone(), PROC_PERCENT)],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(dualcast_buff.get_id())],
            resource_created: HashMap::from([(0, 6)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let veraero_iii_accel: AttackSkill = AttackSkill {
            id: 1804,
            name: String::from("Veraero III"),
            player_id,
            potency: 420,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![verstone_ready_apply.clone()],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(acceleration_buff.get_id())],
            resource_created: HashMap::from([(0, 6)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };

        let verthunder_iii_swift: AttackSkill = AttackSkill {
            id: 1805,
            name: String::from("Verthunder III"),
            player_id,
            potency: 420,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![(verfire_ready_apply.clone(), PROC_PERCENT)],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(caster_skills.swiftcast_buff.get_id())],
            resource_created: HashMap::from([(1, 6)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let verthunder_iii_dualcast: AttackSkill = AttackSkill {
            id: 1806,
            name: String::from("Verthunder III"),
            player_id,
            potency: 420,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![(verfire_ready_apply.clone(), PROC_PERCENT)],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(dualcast_buff.get_id())],
            resource_created: HashMap::from([(1, 6)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let verthunder_iii_accel: AttackSkill = AttackSkill {
            id: 1807,
            name: String::from("Verthunder III"),
            player_id,
            potency: 420,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![verfire_ready_apply.clone()],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(acceleration_buff.get_id())],
            resource_created: HashMap::from([(1, 6)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let verstone: AttackSkill = AttackSkill {
            id: 1808,
            name: String::from("Verstone"),
            player_id,
            potency: 380,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![dualcast_buff_apply.clone()],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 2000,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_reduced_by_speed: false,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(verstone_ready.get_id())],
            resource_created: HashMap::from([(0, 5)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let verfire: AttackSkill = AttackSkill {
            id: 1809,
            name: String::from("Verfire"),
            player_id,
            potency: 380,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![dualcast_buff_apply.clone()],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 2000,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(verfire_ready.get_id())],
            resource_created: ResourceTable::from([(1, 5)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
        };
        let fleche: AttackSkill = AttackSkill {
            id: 1810,
            name: String::from("Fleche"),
            player_id,
            potency: 480,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 0,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_reduced_by_speed: false,
            cooldown_millisecond: 25000,
            resource_required: vec![],
            resource_created: Default::default(),
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let contre_sixte: AttackSkill = AttackSkill {
            id: 1811,
            name: String::from("Contre Sixte"),
            player_id,
            potency: 420,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 0,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_reduced_by_speed: false,
            cooldown_millisecond: 35000,
            resource_required: vec![],
            resource_created: Default::default(),
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };

        let corps_a_corps: AttackSkill = AttackSkill {
            id: 1812,
            name: String::from("Corps-a-corps"),
            player_id,
            potency: 130,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 0,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_reduced_by_speed: false,
            cooldown_millisecond: 35000,
            resource_required: vec![],
            resource_created: Default::default(),
            current_cooldown_millisecond: 0,
            stacks: 2,
            max_stacks: 2,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let engagement: AttackSkill = AttackSkill {
            id: 1813,
            name: String::from("Engagement"),
            player_id,
            potency: 180,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 0,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_reduced_by_speed: false,
            cooldown_millisecond: 35000,
            resource_required: vec![],
            resource_created: Default::default(),
            current_cooldown_millisecond: 0,
            stacks: 2,
            max_stacks: 2,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let embolden: AttackSkill = AttackSkill {
            id: 1814,
            name: String::from("Embolden"),
            player_id,
            potency: 0,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![
                ApplyRaidBuff(player_id, embolden_buff.clone(), 20000, 20000, 0),
                ApplyBuff(
                    player_id,
                    player_id,
                    thorned_flourish.clone(),
                    20000,
                    20000,
                    0,
                ),
            ],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 0,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_reduced_by_speed: false,
            cooldown_millisecond: 120000,
            resource_required: vec![],
            resource_created: Default::default(),
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let enchanted_riposte: AttackSkill = AttackSkill {
            id: 1815,
            name: String::from("Enchanted Riposte"),
            player_id,
            potency: 300,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: Some(2),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 1500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(0, 20), Resource(1, 20)],
            resource_created: HashMap::from([(2, 1)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let enchanted_zwerchhau: AttackSkill = AttackSkill {
            id: 1816,
            name: String::from("Enchanted Zwerchhau"),
            player_id,
            potency: 360,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: Some(3),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 1500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(0, 15), Resource(1, 15)],
            resource_created: HashMap::from([(2, 1)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
        };
        let enchanted_redoublement: AttackSkill = AttackSkill {
            id: 1817,
            name: String::from("Enchanted Redoublement"),
            player_id,
            potency: 540,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![ApplyBuff(
                player_id,
                player_id,
                finish_ready.clone(),
                30000,
                30000,
                0,
            )],
            proc_events: vec![],
            combo: Some(1),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2200,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(0, 15), Resource(1, 15)],
            resource_created: HashMap::from([(2, 1)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let verholy: AttackSkill = AttackSkill {
            id: 1818,
            name: String::from("Verholy"),
            player_id,
            potency: 650,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: Some(4),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_reduced_by_speed: false,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(finish_ready.get_id())],
            resource_created: HashMap::from([(0, 11)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let verflare: AttackSkill = AttackSkill {
            id: 1819,
            name: String::from("Verflare"),
            player_id,
            potency: 650,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: Some(4),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_reduced_by_speed: false,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(finish_ready.get_id())],
            resource_created: HashMap::from([(1, 11)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let acceleration: AttackSkill = AttackSkill {
            id: 1820,
            name: String::from("Acceleration"),
            player_id,
            potency: 0,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![
                ApplyBuff(
                    player_id,
                    player_id,
                    acceleration_buff.clone(),
                    20000,
                    20000,
                    0,
                ),
                ApplyBuff(
                    player_id,
                    player_id,
                    grand_impact_ready.clone(),
                    30000,
                    30000,
                    0,
                ),
            ],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 0,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_reduced_by_speed: false,
            cooldown_millisecond: 55000,
            resource_required: vec![],
            resource_created: Default::default(),
            current_cooldown_millisecond: 0,
            stacks: 2,
            max_stacks: 2,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let manafication: AttackSkill = AttackSkill {
            id: 1821,
            name: String::from("Manafication"),
            player_id,
            use_type: UseType::NoTarget,
            potency: 0,
            trait_percent: 130,
            additional_skill_events: vec![
                ApplyBuff(
                    player_id,
                    player_id,
                    manafication_buff.clone(),
                    15000,
                    15000,
                    0,
                ),
                ApplyBuff(
                    player_id,
                    player_id,
                    magicked_swordplay.clone(),
                    15000,
                    15000,
                    0,
                ),
            ],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 0,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_reduced_by_speed: false,
            cooldown_millisecond: 110000,
            resource_required: vec![],
            resource_created: Default::default(),
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let scorch: AttackSkill = AttackSkill {
            id: 1822,
            name: String::from("Scorch"),
            player_id,
            potency: 750,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: Some(5),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![],
            resource_created: HashMap::from([(0, 4), (1, 4)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let resolution: AttackSkill = AttackSkill {
            id: 1823,
            name: String::from("Resolution"),
            player_id,
            potency: 850,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: Some(0),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_reduced_by_speed: false,
            cooldown_millisecond: 0,
            resource_required: vec![],
            resource_created: ResourceTable::from([(0, 4), (1, 4)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let vice_of_thorns: AttackSkill = AttackSkill {
            id: 1824,
            name: String::from("Vice of Thorns"),
            player_id,
            potency: 700,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 0,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_reduced_by_speed: false,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(thorned_flourish.get_id())],
            resource_created: Default::default(),
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let grand_impact: AttackSkill = AttackSkill {
            id: 1825,
            name: String::from("Grand Impact"),
            player_id,
            potency: 600,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(grand_impact_ready.get_id())],
            resource_created: HashMap::from([(0, 3), (1, 3)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let prefulgence: AttackSkill = AttackSkill {
            id: 1826,
            name: String::from("Prefulgence"),
            player_id,
            potency: 900,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 0,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_reduced_by_speed: false,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(3, 6)],
            resource_created: Default::default(),
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let manafication_riposte: AttackSkill = AttackSkill {
            id: 1827,
            name: String::from("Enchanted Riposte"),
            player_id,
            potency: 300,
            use_type: UseType::UseOnTarget,
            trait_percent: 135,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: Some(2),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 1500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(manafication_buff.id)],
            resource_created: HashMap::from([(3, 1)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let manafication_zwerchhau: AttackSkill = AttackSkill {
            id: 1828,
            name: String::from("Enchanted Zwerchhau"),
            player_id,
            potency: 360,
            use_type: UseType::UseOnTarget,
            trait_percent: 135,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: Some(3),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 1500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(manafication_buff.id)],
            resource_created: HashMap::from([(3, 1)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
        };
        let manafication_redoublement: AttackSkill = AttackSkill {
            id: 1829,
            name: String::from("Manafication Redoublement"),
            player_id,
            potency: 540,
            use_type: UseType::UseOnTarget,
            trait_percent: 135,
            additional_skill_events: vec![ApplyBuff(
                player_id,
                player_id,
                finish_ready.clone(),
                30000,
                30000,
                0,
            )],
            proc_events: vec![],
            combo: Some(1),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2200,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(manafication_buff.id)],
            resource_created: HashMap::from([(3, 1)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let manafication_verholy: AttackSkill = AttackSkill {
            id: 1830,
            name: String::from("Verholy"),
            player_id,
            potency: 650,
            use_type: UseType::UseOnTarget,
            trait_percent: 135,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: Some(4),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_reduced_by_speed: false,
            cooldown_millisecond: 0,
            resource_required: vec![
                UseBuff(manafication_buff.get_id()),
                UseBuff(finish_ready.get_id()),
            ],
            resource_created: HashMap::from([(0, 11), (3, 1)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let manafication_verflare: AttackSkill = AttackSkill {
            id: 1831,
            name: String::from("Verflare"),
            player_id,
            potency: 650,
            use_type: UseType::UseOnTarget,
            trait_percent: 135,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: Some(4),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_reduced_by_speed: false,
            cooldown_millisecond: 0,
            resource_required: vec![
                UseBuff(manafication_buff.get_id()),
                UseBuff(finish_ready.get_id()),
            ],
            resource_created: HashMap::from([(1, 11), (3, 1)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let manafication_scorch: AttackSkill = AttackSkill {
            id: 1832,
            name: String::from("Scorch"),
            player_id,
            potency: 750,
            use_type: UseType::UseOnTarget,
            trait_percent: 135,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: Some(5),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(manafication_buff.get_id())],
            resource_created: HashMap::from([(0, 4), (1, 4), (3, 1)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let manafication_resolution: AttackSkill = AttackSkill {
            id: 1833,
            name: String::from("Resolution"),
            player_id,
            potency: 850,
            use_type: UseType::UseOnTarget,
            trait_percent: 135,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: Some(0),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_reduced_by_speed: false,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(manafication_buff.get_id())],
            resource_created: ResourceTable::from([(0, 4), (1, 4), (3, 1)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            max_stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };

        let potion_skill = PotionSkill::new(player_id);

        Self {
            jolt_iii,
            veraero_iii,
            veraero_iii_swift,
            veraero_iii_dual: veraero_iii_dualcast,
            veraero_iii_accel,
            verthunder_iii_swift,
            verthunder_iii_dual: verthunder_iii_dualcast,
            verthunder_iii_accel,
            verstone,
            verfire,
            fleche,
            contre_sixte,
            corps_a_corps,
            engagement,
            embolden,
            enchanted_riposte,
            enchanted_zwerchhau,
            enchanted_redoublement,
            verholy,
            verflare,
            acceleration,
            manafication,
            scorch,
            resolution,
            vice_of_thorns,
            grand_impact,
            prefulgence,
            manafication_riposte,
            manafication_zwerchhau,
            manafication_redoublement,
            manafication_verholy,
            manafication_verflare,
            manafication_scorch,
            manafication_resolution,

            swiftcast: caster_skills.swiftcast,
            acceleration_buff,
            dualcast_buff,
            verstone_ready,
            verfire_ready,
            finish_ready,

            potion: potion_skill.potion,
        }
    }
}

pub(crate) fn make_redmage_skill_list(player_id: PlayerIdType) -> SkillTable<AttackSkill> {
    let db = RedmageDatabase::new(player_id);

    let ninja_skill_list: Vec<AttackSkill> = vec![
        db.jolt_iii.clone(),
        db.veraero_iii.clone(),
        db.veraero_iii_swift.clone(),
        db.veraero_iii_dual.clone(),
        db.veraero_iii_accel.clone(),
        db.verthunder_iii_swift.clone(),
        db.verthunder_iii_dual.clone(),
        db.verthunder_iii_accel.clone(),
        db.verstone.clone(),
        db.verfire.clone(),
        db.fleche.clone(),
        db.contre_sixte.clone(),
        db.corps_a_corps.clone(),
        db.engagement.clone(),
        db.embolden.clone(),
        db.enchanted_riposte.clone(),
        db.enchanted_zwerchhau.clone(),
        db.enchanted_redoublement.clone(),
        db.verholy.clone(),
        db.verflare.clone(),
        db.acceleration.clone(),
        db.manafication.clone(),
        db.scorch.clone(),
        db.resolution.clone(),
        db.vice_of_thorns.clone(),
        db.grand_impact.clone(),
        db.prefulgence.clone(),
        db.manafication_riposte.clone(),
        db.manafication_zwerchhau.clone(),
        db.manafication_redoublement.clone(),
        db.manafication_verholy.clone(),
        db.manafication_verflare.clone(),
        db.manafication_scorch.clone(),
        db.manafication_resolution.clone(),
        db.swiftcast.clone(),
        db.potion.clone(),
    ];

    make_skill_table(ninja_skill_list)
}
