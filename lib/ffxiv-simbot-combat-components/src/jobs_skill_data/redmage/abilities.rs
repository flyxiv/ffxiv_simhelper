use crate::event::ffxiv_event::FfxivEvent::{ApplyBuff, ApplyRaidBuff};
use crate::id_entity::IdEntity;
use crate::jobs_skill_data::{CasterGlobalSkill, PotionSkill};
use crate::rotation::SkillTable;
use crate::skill::attack_skill::AttackSkill;
use crate::skill::use_type::UseType;
use crate::skill::ResourceRequirements::{Resource, UseBuff};
use crate::skill::{make_skill_table, ResourceRequirements, ResourceTable};
use crate::status::buff_status::BuffStatus;
use crate::status::status_info::StatusInfo;
use crate::IdType;
use std::collections::HashMap;

pub(crate) struct RedmageDatabase {
    pub(crate) jolt_iii: AttackSkill,
    pub(crate) veraero_iii: AttackSkill,
    pub(crate) veraero_iii_swift: AttackSkill,
    pub(crate) veraero_iii_dual: AttackSkill,
    pub(crate) veraero_iii_accel: AttackSkill,
    pub(crate) verthunder_iii_swift: AttackSkill,
    pub(crate) verthunder_iii_dual: AttackSkill,
    pub(crate) verthunder_iii_accel: AttackSkill,
    pub(crate) verstone: AttackSkill,
    pub(crate) verfire: AttackSkill,
    pub(crate) fleche: AttackSkill,
    pub(crate) contre_sixte: AttackSkill,
    pub(crate) corps_a_corps: AttackSkill,
    pub(crate) engagement: AttackSkill,
    pub(crate) embolden: AttackSkill,
    pub(crate) enchanted_riposte: AttackSkill,
    pub(crate) enchanted_zwerchhau: AttackSkill,
    pub(crate) enchanted_redoublement: AttackSkill,
    pub(crate) verholy: AttackSkill,
    pub(crate) verflare: AttackSkill,
    pub(crate) acceleration: AttackSkill,
    pub(crate) manafication: AttackSkill,
    pub(crate) scorch: AttackSkill,
    pub(crate) resolution: AttackSkill,
    pub(crate) vice_of_thorns: AttackSkill,
    pub(crate) grand_impact: AttackSkill,
    pub(crate) prefulgence: AttackSkill,
    pub(crate) swiftcast: AttackSkill,
    pub(crate) manafication_riposte: AttackSkill,
    pub(crate) manafication_zwerchhau: AttackSkill,
    pub(crate) manafication_redoublement: AttackSkill,
    pub(crate) manafication_verholy: AttackSkill,
    pub(crate) manafication_verflare: AttackSkill,
    pub(crate) manafication_scorch: AttackSkill,
    pub(crate) manafication_resolution: AttackSkill,

    pub(crate) embolden_buff: BuffStatus,
    pub(crate) manafication_buff: BuffStatus,
    pub(crate) acceleration_buff: BuffStatus,
    pub(crate) dualcast_buff: BuffStatus,
    pub(crate) verstone_ready: BuffStatus,
    pub(crate) verfire_ready: BuffStatus,
    pub(crate) finish_ready: BuffStatus,
    pub(crate) thorned_floursh: BuffStatus,
    pub(crate) grand_impact_ready: BuffStatus,
    pub(crate) prefulgence_ready: BuffStatus,

    pub(crate) swiftcast_buff: BuffStatus,

    pub(crate) potion: AttackSkill,
    pub(crate) potion_buff: BuffStatus,
}

impl RedmageDatabase {
    pub(crate) fn new(player_id: IdType) -> Self {
        let caster_skills = CasterGlobalSkill::new(player_id);

        let EMBOLDEN_BUFF: BuffStatus = {
            BuffStatus {
                id: 1800,
                name: String::from("Embolden"),
                owner_id: player_id,
                duration_left_millisecond: 0,
                status_info: vec![StatusInfo::DamagePercent(5)],
                duration_millisecond: 20000,
                is_raidwide: true,
                stacks: 1,
                max_stacks: 1,
                trigger_proc_event_on_gcd: vec![],
            }
        };
        let MANAFICATION_BUFF: BuffStatus = BuffStatus {
            id: 1801,
            name: String::from("Manafication"),
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 15000,
            is_raidwide: false,
            stacks: 6,
            max_stacks: 6,
            trigger_proc_event_on_gcd: vec![],
        };
        let ACCELERATION_BUFF: BuffStatus = BuffStatus {
            id: 1802,
            name: String::from("Acceleration"),
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 20000,
            is_raidwide: false,
            stacks: 1,
            max_stacks: 1,
            trigger_proc_event_on_gcd: vec![],
        };
        let DUALCAST_BUFF: BuffStatus = BuffStatus {
            id: 1803,
            name: String::from("Dualcast"),
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 15000,
            is_raidwide: false,
            stacks: 1,
            max_stacks: 1,
            trigger_proc_event_on_gcd: vec![],
        };
        let VERSTONE_READY: BuffStatus = BuffStatus {
            id: 1804,
            name: String::from("Verstone Ready"),
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 30000,
            is_raidwide: false,
            stacks: 1,
            max_stacks: 1,
            trigger_proc_event_on_gcd: vec![],
        };
        let VERFIRE_READY: BuffStatus = BuffStatus {
            id: 1805,
            name: String::from("Verfire Ready"),
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 30000,
            is_raidwide: false,
            stacks: 1,
            max_stacks: 1,
            trigger_proc_event_on_gcd: vec![],
        };

        let FINISH_READY: BuffStatus = BuffStatus {
            id: 1806,
            name: String::from("Finish Ready"),
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 30000,
            is_raidwide: false,
            stacks: 1,
            max_stacks: 1,
            trigger_proc_event_on_gcd: vec![],
        };
        let THORNED_FLOURISH: BuffStatus = BuffStatus {
            id: 1807,
            name: String::from("Thorned Flourish"),
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 30000,
            is_raidwide: false,
            stacks: 1,
            max_stacks: 1,
            trigger_proc_event_on_gcd: vec![],
        };
        let GRAND_IMPACT_READY: BuffStatus = BuffStatus {
            id: 1808,
            name: String::from("Grand Impact Ready"),
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 30000,
            is_raidwide: false,
            stacks: 1,
            max_stacks: 1,
            trigger_proc_event_on_gcd: vec![],
        };
        let MAGICKED_SWORDPLAY: BuffStatus = BuffStatus {
            id: 1810,
            name: String::from("Magicked Swordplay"),
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 30000,
            is_raidwide: false,
            stacks: 3,
            max_stacks: 3,
            trigger_proc_event_on_gcd: vec![],
        };

        let dualcast_buff_apply =
            ApplyBuff(player_id, player_id, DUALCAST_BUFF.clone(), 15000, 15000, 0);
        let verstone_ready_apply = ApplyBuff(
            player_id,
            player_id,
            VERSTONE_READY.clone(),
            30000,
            30000,
            0,
        );
        let verfire_ready_apply =
            ApplyBuff(player_id, player_id, VERFIRE_READY.clone(), 30000, 30000, 0);

        let JOLT_III: AttackSkill = AttackSkill {
            id: 1800,
            name: String::from("Jolt III"),
            player_id,
            use_type: UseType::UseOnTarget,
            potency: 360,
            trait_percent: 130,
            additional_skill_events: vec![dualcast_buff_apply.clone()],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 1800,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![],
            resource_created: HashMap::from([(0, 2), (1, 2)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
        };
        let VERAERO_III: AttackSkill = AttackSkill {
            id: 1801,
            name: String::from("Veraero III"),
            player_id,
            potency: 440,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![(verstone_ready_apply.clone(), 50)],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 5000,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![],
            resource_created: HashMap::from([(0, 6)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let VERAERO_III_SWIFT: AttackSkill = AttackSkill {
            id: 1802,
            name: String::from("Veraero III"),
            player_id,
            potency: 440,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![(verstone_ready_apply.clone(), 50)],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(caster_skills.swiftcast_buff.get_id())],
            resource_created: HashMap::from([(0, 6)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let VERAERO_III_DUALCAST: AttackSkill = AttackSkill {
            id: 1803,
            name: String::from("Veraero III"),
            player_id,
            potency: 440,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![(verstone_ready_apply.clone(), 50)],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(DUALCAST_BUFF.get_id())],
            resource_created: HashMap::from([(0, 6)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let VERAERO_III_ACCEL: AttackSkill = AttackSkill {
            id: 1804,
            name: String::from("Veraero III"),
            player_id,
            potency: 440,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![verstone_ready_apply.clone()],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(ACCELERATION_BUFF.get_id())],
            resource_created: HashMap::from([(0, 6)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };

        let VERTHUNDER_III_SWIFT: AttackSkill = AttackSkill {
            id: 1805,
            name: String::from("Verthunder III"),
            player_id,
            potency: 440,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![(verfire_ready_apply.clone(), 50)],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(caster_skills.swiftcast_buff.get_id())],
            resource_created: HashMap::from([(1, 6)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let VERTHUNDER_III_DUALCAST: AttackSkill = AttackSkill {
            id: 1806,
            name: String::from("Verthunder III"),
            player_id,
            potency: 440,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![(verfire_ready_apply.clone(), 50)],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(DUALCAST_BUFF.get_id())],
            resource_created: HashMap::from([(1, 6)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let VERTHUNDER_III_ACCEL: AttackSkill = AttackSkill {
            id: 1807,
            name: String::from("Verthunder III"),
            player_id,
            potency: 440,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![verfire_ready_apply.clone()],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(ACCELERATION_BUFF.get_id())],
            resource_created: HashMap::from([(1, 6)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let VERSTONE: AttackSkill = AttackSkill {
            id: 1808,
            name: String::from("Verstone"),
            player_id,
            potency: 380,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![dualcast_buff_apply.clone()],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 2000,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(VERSTONE_READY.get_id())],
            resource_created: HashMap::from([(0, 5)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let VERFIRE: AttackSkill = AttackSkill {
            id: 1809,
            name: String::from("Verfire"),
            player_id,
            potency: 380,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![dualcast_buff_apply.clone()],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 2000,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(VERFIRE_READY.get_id())],
            resource_created: ResourceTable::from([(1, 5)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
        };
        let FLECHE: AttackSkill = AttackSkill {
            id: 1810,
            name: String::from("Fleche"),
            player_id,
            potency: 480,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 0,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_millisecond: 25000,
            resource_required: vec![],
            resource_created: Default::default(),
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let CONTRE_SIXTE: AttackSkill = AttackSkill {
            id: 1811,
            name: String::from("Contre Sixte"),
            player_id,
            potency: 420,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 0,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_millisecond: 35000,
            resource_required: vec![],
            resource_created: Default::default(),
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };

        let CORPS_A_CORPS: AttackSkill = AttackSkill {
            id: 1812,
            name: String::from("Corps-a-corps"),
            player_id,
            potency: 130,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 0,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_millisecond: 35000,
            resource_required: vec![],
            resource_created: Default::default(),
            current_cooldown_millisecond: 0,
            stacks: 2,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let ENGAGEMENT: AttackSkill = AttackSkill {
            id: 1813,
            name: String::from("Engagement"),
            player_id,
            potency: 180,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 0,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_millisecond: 35000,
            resource_required: vec![],
            resource_created: Default::default(),
            current_cooldown_millisecond: 0,
            stacks: 2,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let EMBOLDEN: AttackSkill = AttackSkill {
            id: 1814,
            name: String::from("Embolden"),
            player_id,
            potency: 0,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![
                ApplyRaidBuff(player_id, EMBOLDEN_BUFF.clone(), 20000, 20000, 0),
                ApplyBuff(
                    player_id,
                    player_id,
                    THORNED_FLOURISH.clone(),
                    20000,
                    20000,
                    0,
                ),
            ],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 0,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_millisecond: 120000,
            resource_required: vec![],
            resource_created: Default::default(),
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let ENCHANTED_RIPOSTE: AttackSkill = AttackSkill {
            id: 1815,
            name: String::from("Enchanted Riposte"),
            player_id,
            potency: 300,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: Some(2),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 1500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(0, 20), Resource(1, 20)],
            resource_created: HashMap::from([(2, 1)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let ENHANCED_ZWERCHHAU: AttackSkill = AttackSkill {
            id: 1816,
            name: String::from("Enchanted Zwerchhau"),
            player_id,
            potency: 360,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: Some(3),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 1500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(0, 15), Resource(1, 15)],
            resource_created: HashMap::from([(2, 1)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
        };
        let ENCHANTED_REDOUBLEMENT: AttackSkill = AttackSkill {
            id: 1817,
            name: String::from("Enchanted Redoublement"),
            player_id,
            potency: 540,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![ApplyBuff(
                player_id,
                player_id,
                FINISH_READY.clone(),
                30000,
                30000,
                0,
            )],
            proc_events: vec![],
            combo: Some(1),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(0, 15), Resource(1, 15)],
            resource_created: HashMap::from([(2, 1)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let VERHOLY: AttackSkill = AttackSkill {
            id: 1818,
            name: String::from("Verholy"),
            player_id,
            potency: 620,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: Some(4),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(FINISH_READY.get_id())],
            resource_created: HashMap::from([(0, 11)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let VERFLARE: AttackSkill = AttackSkill {
            id: 1819,
            name: String::from("Verflare"),
            player_id,
            potency: 620,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: Some(4),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(FINISH_READY.get_id())],
            resource_created: HashMap::from([(1, 11)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let ACCELERATION: AttackSkill = AttackSkill {
            id: 1820,
            name: String::from("Acceleration"),
            player_id,
            potency: 0,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![
                ApplyBuff(
                    player_id,
                    player_id,
                    ACCELERATION_BUFF.clone(),
                    20000,
                    20000,
                    0,
                ),
                ApplyBuff(
                    player_id,
                    player_id,
                    GRAND_IMPACT_READY.clone(),
                    30000,
                    30000,
                    0,
                ),
            ],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 0,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_millisecond: 55000,
            resource_required: vec![],
            resource_created: Default::default(),
            current_cooldown_millisecond: 0,
            stacks: 2,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let MANAFICATION: AttackSkill = AttackSkill {
            id: 1821,
            name: String::from("Manafication"),
            player_id,
            use_type: UseType::NoTarget,
            potency: 0,
            trait_percent: 130,
            additional_skill_events: vec![
                ApplyBuff(
                    player_id,
                    player_id,
                    MANAFICATION_BUFF.clone(),
                    15000,
                    15000,
                    0,
                ),
                ApplyBuff(
                    player_id,
                    player_id,
                    MAGICKED_SWORDPLAY.clone(),
                    15000,
                    15000,
                    0,
                ),
            ],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 0,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_millisecond: 110000,
            resource_required: vec![],
            resource_created: Default::default(),
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let SCORCH: AttackSkill = AttackSkill {
            id: 1822,
            name: String::from("Scorch"),
            player_id,
            potency: 700,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: Some(5),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![],
            resource_created: HashMap::from([(0, 4), (1, 4)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let RESOLUTION: AttackSkill = AttackSkill {
            id: 1823,
            name: String::from("Resolution"),
            player_id,
            potency: 800,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: Some(0),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_millisecond: 0,
            resource_required: vec![],
            resource_created: ResourceTable::from([(0, 4), (1, 4)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let VICE_OF_THORNS: AttackSkill = AttackSkill {
            id: 1824,
            name: String::from("Vice of Thorns"),
            player_id,
            potency: 700,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 0,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(THORNED_FLOURISH.get_id())],
            resource_created: Default::default(),
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let GRAND_IMPACT: AttackSkill = AttackSkill {
            id: 1825,
            name: String::from("Grand Impact"),
            player_id,
            potency: 600,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(GRAND_IMPACT_READY.get_id())],
            resource_created: HashMap::from([(0, 3), (1, 3)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let PREFULGENCE: AttackSkill = AttackSkill {
            id: 1826,
            name: String::from("Prefulgence"),
            player_id,
            potency: 900,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 0,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(3, 6)],
            resource_created: Default::default(),
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let MANAFICATION_RIPOSTE: AttackSkill = AttackSkill {
            id: 1827,
            name: String::from("Enchanted Riposte"),
            player_id,
            potency: 300,
            use_type: UseType::UseOnTarget,
            trait_percent: 138,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: Some(2),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 1500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(MANAFICATION_BUFF.id)],
            resource_created: HashMap::from([(3, 1)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let MANAFICATION_ZWERCHHAU: AttackSkill = AttackSkill {
            id: 1828,
            name: String::from("Enchanted Zwerchhau"),
            player_id,
            potency: 360,
            use_type: UseType::UseOnTarget,
            trait_percent: 138,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: Some(3),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 1500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(MANAFICATION_BUFF.id)],
            resource_created: HashMap::from([(3, 1)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
        };
        let MANAFICATION_REDOUBLEMENT: AttackSkill = AttackSkill {
            id: 1829,
            name: String::from("Manafication Redoublement"),
            player_id,
            potency: 540,
            use_type: UseType::UseOnTarget,
            trait_percent: 138,
            additional_skill_events: vec![ApplyBuff(
                player_id,
                player_id,
                FINISH_READY.clone(),
                30000,
                30000,
                0,
            )],
            proc_events: vec![],
            combo: Some(1),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(MANAFICATION_BUFF.id)],
            resource_created: HashMap::from([(3, 1)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let MANAFICATION_VERHOLY: AttackSkill = AttackSkill {
            id: 1830,
            name: String::from("Verholy"),
            player_id,
            potency: 620,
            use_type: UseType::UseOnTarget,
            trait_percent: 138,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: Some(4),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_millisecond: 0,
            resource_required: vec![
                UseBuff(MANAFICATION_BUFF.get_id()),
                UseBuff(FINISH_READY.get_id()),
            ],
            resource_created: HashMap::from([(0, 11), (3, 1)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let MANAFICATION_VERFLARE: AttackSkill = AttackSkill {
            id: 1831,
            name: String::from("Verflare"),
            player_id,
            potency: 620,
            use_type: UseType::UseOnTarget,
            trait_percent: 130,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: Some(4),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_millisecond: 0,
            resource_required: vec![
                UseBuff(MANAFICATION_BUFF.get_id()),
                UseBuff(FINISH_READY.get_id()),
            ],
            resource_created: HashMap::from([(1, 11), (3, 1)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let MANAFICATION_SCORCH: AttackSkill = AttackSkill {
            id: 1832,
            name: String::from("Scorch"),
            player_id,
            potency: 700,
            use_type: UseType::UseOnTarget,
            trait_percent: 138,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: Some(5),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(MANAFICATION_BUFF.get_id())],
            resource_created: HashMap::from([(0, 4), (1, 4), (3, 1)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };
        let MANAFICATION_RESOLUTION: AttackSkill = AttackSkill {
            id: 1833,
            name: String::from("Resolution"),
            player_id,
            potency: 800,
            use_type: UseType::UseOnTarget,
            trait_percent: 138,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: Some(0),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(MANAFICATION_BUFF.get_id())],
            resource_created: ResourceTable::from([(0, 4), (1, 4), (3, 1)]),
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_crit: false,
            is_guaranteed_direct_hit: false,
        };

        let potion_skill = PotionSkill::new(player_id);

        Self {
            jolt_iii: JOLT_III,
            veraero_iii: VERAERO_III,
            veraero_iii_swift: VERAERO_III_SWIFT,
            veraero_iii_dual: VERAERO_III_DUALCAST,
            veraero_iii_accel: VERAERO_III_ACCEL,
            verthunder_iii_swift: VERTHUNDER_III_SWIFT,
            verthunder_iii_dual: VERTHUNDER_III_DUALCAST,
            verthunder_iii_accel: VERTHUNDER_III_ACCEL,
            verstone: VERSTONE,
            verfire: VERFIRE,
            fleche: FLECHE,
            contre_sixte: CONTRE_SIXTE,
            corps_a_corps: CORPS_A_CORPS,
            engagement: ENGAGEMENT,
            embolden: EMBOLDEN,
            enchanted_riposte: ENCHANTED_RIPOSTE,
            enchanted_zwerchhau: ENHANCED_ZWERCHHAU,
            enchanted_redoublement: ENCHANTED_REDOUBLEMENT,
            verholy: VERHOLY,
            verflare: VERFLARE,
            acceleration: ACCELERATION,
            manafication: MANAFICATION,
            scorch: SCORCH,
            resolution: RESOLUTION,
            vice_of_thorns: VICE_OF_THORNS,
            grand_impact: GRAND_IMPACT,
            prefulgence: PREFULGENCE,
            manafication_riposte: MANAFICATION_RIPOSTE,
            manafication_zwerchhau: MANAFICATION_ZWERCHHAU,
            manafication_redoublement: MANAFICATION_REDOUBLEMENT,
            manafication_verholy: MANAFICATION_VERHOLY,
            manafication_verflare: MANAFICATION_VERFLARE,
            manafication_scorch: MANAFICATION_SCORCH,
            manafication_resolution: MANAFICATION_RESOLUTION,

            swiftcast: caster_skills.swiftcast,
            embolden_buff: EMBOLDEN_BUFF,
            manafication_buff: MANAFICATION_BUFF,
            acceleration_buff: ACCELERATION_BUFF,
            dualcast_buff: DUALCAST_BUFF,
            verstone_ready: VERSTONE_READY,
            verfire_ready: VERFIRE_READY,
            finish_ready: FINISH_READY,
            swiftcast_buff: caster_skills.swiftcast_buff,

            potion: potion_skill.potion,
            potion_buff: potion_skill.potion_buff,
        }
    }
}

pub(crate) fn make_redmage_skill_list(player_id: IdType) -> SkillTable<AttackSkill> {
    let db = RedmageDatabase::new(player_id);

    let ninja_skill_list: Vec<AttackSkill> = vec![
        db.jolt_iii.clone(),
        db.veraero_iii.clone(),
        db.veraero_iii_swift.clone(),
        db.veraero_iii_dual.clone(),
        db.veraero_iii_accel.clone(),
        db.verthunder_iii_swift.clone(),
        db.verthunder_iii_dual.clone(),
        db.verthunder_iii_accel.clone(),
        db.verstone.clone(),
        db.verfire.clone(),
        db.fleche.clone(),
        db.contre_sixte.clone(),
        db.corps_a_corps.clone(),
        db.engagement.clone(),
        db.embolden.clone(),
        db.enchanted_riposte.clone(),
        db.enchanted_zwerchhau.clone(),
        db.enchanted_redoublement.clone(),
        db.verholy.clone(),
        db.verflare.clone(),
        db.acceleration.clone(),
        db.manafication.clone(),
        db.scorch.clone(),
        db.resolution.clone(),
        db.vice_of_thorns.clone(),
        db.grand_impact.clone(),
        db.prefulgence.clone(),
        db.manafication_riposte.clone(),
        db.manafication_zwerchhau.clone(),
        db.manafication_redoublement.clone(),
        db.manafication_verholy.clone(),
        db.manafication_verflare.clone(),
        db.manafication_scorch.clone(),
        db.manafication_resolution.clone(),
        db.swiftcast.clone(),
        db.potion.clone(),
    ];

    make_skill_table(ninja_skill_list)
}
