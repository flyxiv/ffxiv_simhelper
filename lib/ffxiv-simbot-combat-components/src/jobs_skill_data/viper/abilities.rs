use crate::event::ffxiv_event::FfxivEvent::ApplyBuff;
use crate::jobs_skill_data::PotionSkill;
use crate::rotation::SkillTable;
use crate::skill::attack_skill::AttackSkill;
use crate::skill::make_skill_table;
use crate::skill::use_type::UseType;
use crate::skill::ResourceRequirements::{Resource, UseBuff};
use crate::status::buff_status::BuffStatus;
use crate::status::status_info::StatusInfo;
use crate::IdType;
use std::collections::HashMap;

pub(crate) struct ViperDatabase {
    pub(crate) steel_fangs: AttackSkill,
    pub(crate) dread_fangs: AttackSkill,
    pub(crate) dreadwinder: AttackSkill,
    pub(crate) hunters_sting: AttackSkill,
    pub(crate) swiftskins_sting: AttackSkill,
    pub(crate) flankstings_strike: AttackSkill,
    pub(crate) flanksbane_fang: AttackSkill,
    pub(crate) hindsting_strike: AttackSkill,
    pub(crate) hindsbane_fang: AttackSkill,
    pub(crate) normal_filler1: AttackSkill,
    pub(crate) normal_filler2: AttackSkill,
    pub(crate) hunters_coil: AttackSkill,
    pub(crate) swiftskins_coil: AttackSkill,
    pub(crate) serpents_ire: AttackSkill,
    pub(crate) reawaken: AttackSkill,
    pub(crate) first_generation: AttackSkill,
    pub(crate) second_generation: AttackSkill,
    pub(crate) third_generation: AttackSkill,
    pub(crate) fourth_generation: AttackSkill,
    pub(crate) ouroboros: AttackSkill,
    pub(crate) reawaken_filler: AttackSkill,
    pub(crate) reawaken_proc: AttackSkill,
    pub(crate) uncoiled_fury: AttackSkill,
    pub(crate) death_rattle: AttackSkill,

    pub(crate) hunters_instinct: BuffStatus,
    pub(crate) swiftscaled: BuffStatus,
    pub(crate) hindstung_venom: BuffStatus,
    pub(crate) hindsbane_venom: BuffStatus,
    pub(crate) flanksbane_venom: BuffStatus,
    pub(crate) flankstung_venom: BuffStatus,
    pub(crate) ready_to_reawaken: BuffStatus,
    pub(crate) honed_reavers: BuffStatus,
    pub(crate) honed_steels: BuffStatus,

    pub(crate) potion: AttackSkill,
    pub(crate) potion_buff: BuffStatus,
}

impl ViperDatabase {
    pub(crate) fn new(player_id: IdType) -> Self {
        let HUNTERS_INSTINCT: BuffStatus = BuffStatus {
            id: 2101,
            name: String::from("Hunter's Instinct"),
            stacks: 1,
            max_stacks: 1,
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::DamagePercent(10)],
            duration_millisecond: 40000,
            is_raidwide: false,
            trigger_proc_event_on_gcd: vec![],
        };
        let SWIFTSCALED: BuffStatus = BuffStatus {
            id: 2102,
            name: String::from("Swiftscaled"),
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::SpeedPercent(15)],
            duration_millisecond: 40000,
            is_raidwide: false,
            stacks: 1,
            max_stacks: 1,
            trigger_proc_event_on_gcd: vec![],
        };
        let HINDSTUNG_VENOM: BuffStatus = BuffStatus {
            id: 2103,
            name: String::from("Hindstung Venom"),
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 60000,
            is_raidwide: false,
            stacks: 1,
            max_stacks: 1,
            trigger_proc_event_on_gcd: vec![],
        };
        let HINDSBANE_VENOM: BuffStatus = BuffStatus {
            id: 2104,
            name: String::from("Hindsbane Venom"),
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 60000,
            is_raidwide: false,
            stacks: 1,
            max_stacks: 1,
            trigger_proc_event_on_gcd: vec![],
        };
        let FLANKSBANE_VENOM: BuffStatus = BuffStatus {
            id: 2105,
            name: String::from("Flanksbane Venom"),
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 60000,
            is_raidwide: false,
            stacks: 1,
            max_stacks: 1,
            trigger_proc_event_on_gcd: vec![],
        };
        let FLANKSTUNG_VENOM: BuffStatus = BuffStatus {
            id: 2106,
            name: String::from("Flankstung Venom"),
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 60000,
            is_raidwide: false,
            stacks: 1,
            max_stacks: 1,
            trigger_proc_event_on_gcd: vec![],
        };
        let READY_TO_REAWAKEN: BuffStatus = BuffStatus {
            id: 2107,
            name: String::from("Ready to Reawaken"),
            stacks: 1,
            max_stacks: 1,
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 60000,
            is_raidwide: false,
            trigger_proc_event_on_gcd: vec![],
        };
        let HONED_REAVERS: BuffStatus = BuffStatus {
            id: 2108,
            name: String::from("Honed Reavers"),
            stacks: 1,
            max_stacks: 1,
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 60000,
            is_raidwide: false,
            trigger_proc_event_on_gcd: vec![],
        };
        let HONED_STEELS: BuffStatus = BuffStatus {
            id: 2109,
            name: String::from("Honed Steels"),
            stacks: 1,
            max_stacks: 1,
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 60000,
            is_raidwide: false,
            trigger_proc_event_on_gcd: vec![],
        };

        let STEEL_FANGS: AttackSkill = AttackSkill {
            id: 2100,
            name: String::from("Steel Fangs"),
            player_id,
            potency: 300,
            trait_percent: 100,
            additional_skill_events: vec![ApplyBuff(
                player_id,
                player_id,
                HONED_REAVERS.clone(),
                60000,
                60000,
                0,
            )],
            proc_events: vec![],
            combo: Some(2),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(HONED_STEELS.id)],
            resource_created: Default::default(),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let DREAD_FANGS: AttackSkill = AttackSkill {
            id: 2101,
            name: String::from("Dread Fangs"),
            player_id,
            potency: 300,
            trait_percent: 100,
            additional_skill_events: vec![ApplyBuff(
                player_id,
                player_id,
                HONED_STEELS.clone(),
                60000,
                60000,
                0,
            )],
            proc_events: vec![],
            combo: Some(2),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![],
            resource_created: Default::default(),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let DREADWINDER: AttackSkill = AttackSkill {
            id: 2102,
            name: String::from("Dreadwinder"),
            player_id,
            potency: 500,
            trait_percent: 100,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 40000,
            resource_required: vec![],
            resource_created: HashMap::from([(4, 1), (5, 1), (6, 1)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 2,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let HUNTERS_STING: AttackSkill = AttackSkill {
            id: 2103,
            name: String::from("Hunter's Sting"),
            player_id,
            potency: 300,
            trait_percent: 100,
            additional_skill_events: vec![ApplyBuff(
                player_id,
                player_id,
                HUNTERS_INSTINCT.clone(),
                40000,
                40000,
                0,
            )],
            proc_events: vec![],
            combo: Some(3),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![],
            resource_created: Default::default(),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let SWIFTSKINS_STING: AttackSkill = AttackSkill {
            id: 2104,
            name: String::from("Swiftskin's Sting"),
            player_id,
            potency: 300,
            trait_percent: 100,
            additional_skill_events: vec![ApplyBuff(
                player_id,
                player_id,
                SWIFTSCALED.clone(),
                40000,
                40000,
                0,
            )],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![],
            resource_created: Default::default(),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let FLANKSTING_STRIKE: AttackSkill = AttackSkill {
            id: 2105,
            name: String::from("Flanksting Strike"),
            player_id,
            potency: 500,
            trait_percent: 100,
            additional_skill_events: vec![ApplyBuff(
                player_id,
                player_id,
                HINDSTUNG_VENOM.clone(),
                60000,
                60000,
                0,
            )],
            proc_events: vec![],
            combo: Some(1),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(FLANKSTUNG_VENOM.id)],
            resource_created: HashMap::from([(0, 10), (8, 1)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let FLANKSBANE_FANG: AttackSkill = AttackSkill {
            id: 2106,
            name: String::from("Flanksbane Fang"),
            player_id,
            potency: 500,
            trait_percent: 100,
            additional_skill_events: vec![ApplyBuff(
                player_id,
                player_id,
                HINDSBANE_VENOM.clone(),
                30000,
                30000,
                0,
            )],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(FLANKSBANE_VENOM.id)],
            resource_created: HashMap::from([(0, 10), (8, 1)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let HINDSTING_STRIKE: AttackSkill = AttackSkill {
            id: 2107,
            name: String::from("Hindsting Strike"),
            player_id,
            potency: 500,
            trait_percent: 100,
            additional_skill_events: vec![ApplyBuff(
                player_id,
                player_id,
                FLANKSBANE_VENOM.clone(),
                60000,
                0000,
                0,
            )],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(HINDSTUNG_VENOM.id)],
            resource_created: HashMap::from([(0, 10), (8, 1)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let HINDSBANE_FANG: AttackSkill = AttackSkill {
            id: 2108,
            name: String::from("Hindsbane Fang"),
            player_id,
            potency: 500,
            trait_percent: 100,
            additional_skill_events: vec![ApplyBuff(
                player_id,
                player_id,
                HINDSBANE_VENOM.clone(),
                60000,
                60000,
                0,
            )],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(HINDSBANE_VENOM.id)],
            resource_created: HashMap::from([(0, 10), (8, 1)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };

        let NORMAL_FILLER1: AttackSkill = AttackSkill {
            id: 2109,
            name: String::from("Normal Filler1"),
            player_id,
            potency: 170,
            trait_percent: 100,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 0,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(1, 1)],
            resource_created: Default::default(),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let NORMAL_FILLER2: AttackSkill = AttackSkill {
            id: 2110,
            name: String::from("Normal Filler2"),
            player_id,
            potency: 170,
            trait_percent: 100,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 0,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(2, 1)],
            resource_created: Default::default(),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let HUNTERS_COIL: AttackSkill = AttackSkill {
            id: 2110,
            name: String::from("Hunter's Coil"),
            player_id,
            potency: 620,
            trait_percent: 100,
            additional_skill_events: vec![ApplyBuff(
                player_id,
                player_id,
                HUNTERS_INSTINCT.clone(),
                40000,
                40000,
                0,
            )],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 3000,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(5, 1)],
            resource_created: HashMap::from([(0, 5), (1, 1), (2, 1)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let SWIFTSKINS_COIL: AttackSkill = AttackSkill {
            id: 2111,
            name: String::from("Swiftskin's Coil"),
            player_id,
            potency: 620,
            trait_percent: 100,
            additional_skill_events: vec![ApplyBuff(
                player_id,
                player_id,
                SWIFTSCALED.clone(),
                40000,
                40000,
                0,
            )],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 3000,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(6, 1)],
            resource_created: HashMap::from([(0, 5), (1, 1), (2, 1)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let SERPENTS_IRE: AttackSkill = AttackSkill {
            id: 2112,
            name: String::from("Serpent's Ire"),
            player_id,
            potency: 0,
            trait_percent: 100,
            additional_skill_events: vec![ApplyBuff(
                player_id,
                player_id,
                READY_TO_REAWAKEN.clone(),
                30000,
                30000,
                0,
            )],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 0,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_millisecond: 120000,
            resource_required: vec![],
            resource_created: HashMap::from([(4, 1)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::NoTarget,
        };
        let REAWAKEN: AttackSkill = AttackSkill {
            id: 2113,
            name: String::from("Reawaken"),
            player_id,
            potency: 700,
            trait_percent: 100,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2200,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(0, 50)],
            resource_created: HashMap::from([(7, 5)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let FIRST_GENERATION: AttackSkill = AttackSkill {
            id: 2114,
            name: String::from("First Generation"),
            player_id,
            potency: 680,
            trait_percent: 100,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2000,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(7, 1)],
            resource_created: HashMap::from([(3, 1)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let SECOND_GENERATION: AttackSkill = AttackSkill {
            id: 2114,
            name: String::from("Second Generation"),
            player_id,
            potency: 680,
            trait_percent: 100,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2000,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(7, 1)],
            resource_created: HashMap::from([(3, 1)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let THIRD_GENERATION: AttackSkill = AttackSkill {
            id: 2115,
            name: String::from("Third Generation"),
            player_id,
            potency: 680,
            trait_percent: 100,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2000,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(7, 1)],
            resource_created: HashMap::from([(3, 1)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let FOURTH_GENERATION: AttackSkill = AttackSkill {
            id: 2117,
            name: String::from("Fourth Generation"),
            player_id,
            potency: 680,
            trait_percent: 100,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2000,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(7, 1)],
            resource_created: HashMap::from([(3, 1)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };

        let OUROBOROS: AttackSkill = AttackSkill {
            id: 2118,
            name: String::from("Ouroboros"),
            player_id,
            potency: 1150,
            trait_percent: 100,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 3000,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(7, 1)],
            resource_created: Default::default(),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };

        let AWAKENED_FILLER: AttackSkill = AttackSkill {
            id: 2119,
            name: String::from("Awakened Filler"),
            player_id,
            potency: 280,
            trait_percent: 100,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 0,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(3, 1)],
            resource_created: Default::default(),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let REAWAKEN_PROC: AttackSkill = AttackSkill {
            id: 2120,
            name: String::from("Reawaken"),
            player_id,
            potency: 700,
            trait_percent: 100,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2200,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(READY_TO_REAWAKEN.id)],
            resource_created: HashMap::from([(7, 5)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let UNCOILED_FURY: AttackSkill = AttackSkill {
            id: 2121,
            name: String::from("Uncoiled Fury"),
            player_id,
            potency: 600,
            trait_percent: 100,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2200,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(4, 1)],
            resource_created: Default::default(),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };

        let DEATH_RATTLE: AttackSkill = AttackSkill {
            id: 2122,
            name: String::from("Death Rattle"),
            player_id,
            potency: 280,
            trait_percent: 100,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 0,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(8, 1)],
            resource_created: Default::default(),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };

        let potion_skill = PotionSkill::new(player_id);

        ViperDatabase {
            steel_fangs: STEEL_FANGS,
            dread_fangs: DREAD_FANGS,
            dreadwinder: DREADWINDER,
            hunters_sting: HUNTERS_STING,
            swiftskins_sting: SWIFTSKINS_STING,
            flankstings_strike: FLANKSTING_STRIKE,
            flanksbane_fang: FLANKSBANE_FANG,
            hindsting_strike: HINDSTING_STRIKE,
            hindsbane_fang: HINDSBANE_FANG,
            normal_filler1: NORMAL_FILLER1,
            normal_filler2: NORMAL_FILLER2,
            hunters_coil: HUNTERS_COIL,
            swiftskins_coil: SWIFTSKINS_COIL,
            serpents_ire: SERPENTS_IRE,
            reawaken: REAWAKEN,
            first_generation: FIRST_GENERATION,
            second_generation: SECOND_GENERATION,
            third_generation: THIRD_GENERATION,
            fourth_generation: FOURTH_GENERATION,
            ouroboros: OUROBOROS,
            reawaken_filler: AWAKENED_FILLER,
            reawaken_proc: REAWAKEN_PROC,
            uncoiled_fury: UNCOILED_FURY,
            death_rattle: DEATH_RATTLE,

            hunters_instinct: HUNTERS_INSTINCT,
            swiftscaled: SWIFTSCALED,
            hindstung_venom: HINDSTUNG_VENOM,
            hindsbane_venom: HINDSBANE_VENOM,
            flanksbane_venom: FLANKSBANE_VENOM,
            flankstung_venom: FLANKSTUNG_VENOM,
            ready_to_reawaken: READY_TO_REAWAKEN,
            honed_reavers: HONED_REAVERS,
            honed_steels: HONED_STEELS,

            potion: potion_skill.potion,
            potion_buff: potion_skill.potion_buff,
        }
    }
}

pub(crate) fn make_viper_skill_list(player_id: IdType) -> SkillTable<AttackSkill> {
    let db = ViperDatabase::new(player_id);

    let viper_skill_list: Vec<AttackSkill> = vec![
        db.steel_fangs,
        db.dread_fangs,
        db.dreadwinder,
        db.hunters_sting,
        db.swiftskins_sting,
        db.flankstings_strike,
        db.flanksbane_fang,
        db.hindsting_strike,
        db.hindsbane_fang,
        db.normal_filler1,
        db.normal_filler2,
        db.hunters_coil,
        db.swiftskins_coil,
        db.serpents_ire,
        db.reawaken,
        db.first_generation,
        db.second_generation,
        db.third_generation,
        db.fourth_generation,
        db.ouroboros,
        db.reawaken_filler,
        db.reawaken_proc,
        db.uncoiled_fury,
        db.potion,
    ];

    make_skill_table(viper_skill_list)
}
