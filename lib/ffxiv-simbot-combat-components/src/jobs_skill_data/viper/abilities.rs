use crate::event::ffxiv_event::FfxivEvent::ApplyBuff;
use crate::jobs_skill_data::PotionSkill;
use crate::rotation::SkillTable;
use crate::skill::attack_skill::AttackSkill;
use crate::skill::make_skill_table;
use crate::skill::use_type::UseType;
use crate::skill::ResourceRequirements::{Resource, UseBuff};
use crate::status::buff_status::BuffStatus;
use crate::status::status_info::StatusInfo;
use crate::types::PlayerIdType;
use std::collections::HashMap;

pub(crate) struct ViperDatabase {
    pub(crate) steel_fangs: AttackSkill,
    pub(crate) dread_fangs: AttackSkill,
    pub(crate) dreadwinder: AttackSkill,
    pub(crate) hunters_sting: AttackSkill,
    pub(crate) swiftskins_sting: AttackSkill,
    pub(crate) flankstings_strike: AttackSkill,
    pub(crate) flanksbane_fang: AttackSkill,
    pub(crate) hindsting_strike: AttackSkill,
    pub(crate) hindsbane_fang: AttackSkill,
    pub(crate) normal_filler1: AttackSkill,
    pub(crate) normal_filler2: AttackSkill,
    pub(crate) hunters_coil: AttackSkill,
    pub(crate) swiftskins_coil: AttackSkill,
    pub(crate) serpents_ire: AttackSkill,
    pub(crate) reawaken: AttackSkill,
    pub(crate) first_generation: AttackSkill,
    pub(crate) second_generation: AttackSkill,
    pub(crate) third_generation: AttackSkill,
    pub(crate) fourth_generation: AttackSkill,
    pub(crate) ouroboros: AttackSkill,
    pub(crate) reawaken_filler: AttackSkill,
    pub(crate) reawaken_proc: AttackSkill,
    pub(crate) uncoiled_fury: AttackSkill,
    pub(crate) death_rattle: AttackSkill,

    pub(crate) hunters_instinct: BuffStatus,
    pub(crate) swiftscaled: BuffStatus,

    pub(crate) potion: AttackSkill,
}

impl ViperDatabase {
    pub(crate) fn new(player_id: PlayerIdType) -> Self {
        let hunters_instinct: BuffStatus = BuffStatus {
            id: 2101,
            name: String::from("Hunter's Instinct"),
            stacks: 1,
            max_stacks: 1,
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::DamagePercent(10)],
            duration_millisecond: 40000,
            is_raidwide: false,
            trigger_proc_event_on_gcd: vec![],
        };
        let swiftscaled: BuffStatus = BuffStatus {
            id: 2102,
            name: String::from("Swiftscaled"),
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::SpeedPercent(15)],
            duration_millisecond: 40000,
            is_raidwide: false,
            stacks: 1,
            max_stacks: 1,
            trigger_proc_event_on_gcd: vec![],
        };
        let hindstung_venom: BuffStatus = BuffStatus {
            id: 2103,
            name: String::from("Hindstung Venom"),
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 60000,
            is_raidwide: false,
            stacks: 1,
            max_stacks: 1,
            trigger_proc_event_on_gcd: vec![],
        };
        let hindsbane_venom: BuffStatus = BuffStatus {
            id: 2104,
            name: String::from("Hindsbane Venom"),
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 60000,
            is_raidwide: false,
            stacks: 1,
            max_stacks: 1,
            trigger_proc_event_on_gcd: vec![],
        };
        let flanksbane_venom: BuffStatus = BuffStatus {
            id: 2105,
            name: String::from("Flanksbane Venom"),
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 60000,
            is_raidwide: false,
            stacks: 1,
            max_stacks: 1,
            trigger_proc_event_on_gcd: vec![],
        };
        let flankstung_venom: BuffStatus = BuffStatus {
            id: 2106,
            name: String::from("Flankstung Venom"),
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 60000,
            is_raidwide: false,
            stacks: 1,
            max_stacks: 1,
            trigger_proc_event_on_gcd: vec![],
        };
        let ready_to_reawaken: BuffStatus = BuffStatus {
            id: 2107,
            name: String::from("Ready to Reawaken"),
            stacks: 1,
            max_stacks: 1,
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 60000,
            is_raidwide: false,
            trigger_proc_event_on_gcd: vec![],
        };
        let honed_reavers: BuffStatus = BuffStatus {
            id: 2108,
            name: String::from("Honed Reavers"),
            stacks: 1,
            max_stacks: 1,
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 60000,
            is_raidwide: false,
            trigger_proc_event_on_gcd: vec![],
        };
        let honed_steels: BuffStatus = BuffStatus {
            id: 2109,
            name: String::from("Honed Steels"),
            stacks: 1,
            max_stacks: 1,
            owner_id: player_id,
            duration_left_millisecond: 0,
            status_info: vec![StatusInfo::None],
            duration_millisecond: 60000,
            is_raidwide: false,
            trigger_proc_event_on_gcd: vec![],
        };

        let steel_fangs: AttackSkill = AttackSkill {
            id: 2100,
            name: String::from("Steel Fangs"),
            player_id,
            potency: 300,
            trait_percent: 100,
            additional_skill_events: vec![ApplyBuff(
                player_id,
                player_id,
                honed_reavers.clone(),
                60000,
                60000,
                0,
            )],
            proc_events: vec![],
            combo: Some(2),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(honed_steels.id)],
            resource_created: Default::default(),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let dread_fangs: AttackSkill = AttackSkill {
            id: 2101,
            name: String::from("Dread Fangs"),
            player_id,
            potency: 300,
            trait_percent: 100,
            additional_skill_events: vec![ApplyBuff(
                player_id,
                player_id,
                honed_steels.clone(),
                60000,
                60000,
                0,
            )],
            proc_events: vec![],
            combo: Some(2),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(honed_reavers.id)],
            resource_created: Default::default(),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let dreadwinder: AttackSkill = AttackSkill {
            id: 2102,
            name: String::from("Dreadwinder"),
            player_id,
            potency: 500,
            trait_percent: 100,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: false,
            cooldown_millisecond: 40000,
            resource_required: vec![],
            resource_created: HashMap::from([(4, 1), (5, 1), (6, 1)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 2,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let hunters_sting: AttackSkill = AttackSkill {
            id: 2103,
            name: String::from("Hunter's Sting"),
            player_id,
            potency: 300,
            trait_percent: 100,
            additional_skill_events: vec![ApplyBuff(
                player_id,
                player_id,
                hunters_instinct.clone(),
                40000,
                40000,
                0,
            )],
            proc_events: vec![],
            combo: Some(3),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![],
            resource_created: Default::default(),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let swiftskins_sting: AttackSkill = AttackSkill {
            id: 2104,
            name: String::from("Swiftskin's Sting"),
            player_id,
            potency: 300,
            trait_percent: 100,
            additional_skill_events: vec![ApplyBuff(
                player_id,
                player_id,
                swiftscaled.clone(),
                40000,
                40000,
                0,
            )],
            proc_events: vec![],
            combo: Some(3),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![],
            resource_created: Default::default(),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let flanksting_strike: AttackSkill = AttackSkill {
            id: 2105,
            name: String::from("Flanksting Strike"),
            player_id,
            potency: 500,
            trait_percent: 100,
            additional_skill_events: vec![ApplyBuff(
                player_id,
                player_id,
                hindstung_venom.clone(),
                60000,
                60000,
                0,
            )],
            proc_events: vec![],
            combo: Some(1),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(flankstung_venom.id)],
            resource_created: HashMap::from([(0, 10), (8, 1)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let flanksbane_fang: AttackSkill = AttackSkill {
            id: 2106,
            name: String::from("Flanksbane Fang"),
            player_id,
            potency: 500,
            trait_percent: 100,
            additional_skill_events: vec![ApplyBuff(
                player_id,
                player_id,
                hindsbane_venom.clone(),
                60000,
                60000,
                0,
            )],
            proc_events: vec![],
            combo: Some(1),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(flanksbane_venom.id)],
            resource_created: HashMap::from([(0, 10), (8, 1)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let hindsting_strike: AttackSkill = AttackSkill {
            id: 2107,
            name: String::from("Hindsting Strike"),
            player_id,
            potency: 500,
            trait_percent: 100,
            additional_skill_events: vec![ApplyBuff(
                player_id,
                player_id,
                flanksbane_venom.clone(),
                60000,
                60000,
                0,
            )],
            proc_events: vec![],
            combo: Some(1),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(hindstung_venom.id)],
            resource_created: HashMap::from([(0, 10), (8, 1)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let hindsbane_fang: AttackSkill = AttackSkill {
            id: 2108,
            name: String::from("Hindsbane Fang"),
            player_id,
            potency: 500,
            trait_percent: 100,
            additional_skill_events: vec![ApplyBuff(
                player_id,
                player_id,
                flankstung_venom.clone(),
                60000,
                60000,
                0,
            )],
            proc_events: vec![],
            combo: Some(1),
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(hindsbane_venom.id)],
            resource_created: HashMap::from([(0, 10), (8, 1)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };

        let normal_filler1: AttackSkill = AttackSkill {
            id: 2109,
            name: String::from("Normal Filler1"),
            player_id,
            potency: 170,
            trait_percent: 100,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 0,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(1, 1)],
            resource_created: Default::default(),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let normal_filler2: AttackSkill = AttackSkill {
            id: 2110,
            name: String::from("Normal Filler2"),
            player_id,
            potency: 170,
            trait_percent: 100,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 0,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(2, 1)],
            resource_created: Default::default(),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let hunters_coil: AttackSkill = AttackSkill {
            id: 2111,
            name: String::from("Hunter's Coil"),
            player_id,
            potency: 620,
            trait_percent: 100,
            additional_skill_events: vec![ApplyBuff(
                player_id,
                player_id,
                hunters_instinct.clone(),
                40000,
                40000,
                0,
            )],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 3000,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(5, 1)],
            resource_created: HashMap::from([(0, 5), (1, 1), (2, 1)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let swiftskins_coil: AttackSkill = AttackSkill {
            id: 2112,
            name: String::from("Swiftskin's Coil"),
            player_id,
            potency: 620,
            trait_percent: 100,
            additional_skill_events: vec![ApplyBuff(
                player_id,
                player_id,
                swiftscaled.clone(),
                40000,
                40000,
                0,
            )],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 3000,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(6, 1)],
            resource_created: HashMap::from([(0, 5), (1, 1), (2, 1)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let serpents_ire: AttackSkill = AttackSkill {
            id: 2113,
            name: String::from("Serpent's Ire"),
            player_id,
            potency: 0,
            trait_percent: 100,
            additional_skill_events: vec![ApplyBuff(
                player_id,
                player_id,
                ready_to_reawaken.clone(),
                30000,
                30000,
                0,
            )],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 0,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_reduced_by_speed: false,
            cooldown_millisecond: 120000,
            resource_required: vec![],
            resource_created: HashMap::from([(4, 1)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::NoTarget,
        };
        let reawaken: AttackSkill = AttackSkill {
            id: 2114,
            name: String::from("Reawaken"),
            player_id,
            potency: 750,
            trait_percent: 100,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2200,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(0, 50)],
            resource_created: HashMap::from([(7, 5)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let first_generation: AttackSkill = AttackSkill {
            id: 2115,
            name: String::from("First Generation"),
            player_id,
            potency: 680,
            trait_percent: 100,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2000,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(7, 1)],
            resource_created: HashMap::from([(3, 1)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let second_generation: AttackSkill = AttackSkill {
            id: 2116,
            name: String::from("Second Generation"),
            player_id,
            potency: 680,
            trait_percent: 100,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2000,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(7, 1)],
            resource_created: HashMap::from([(3, 1)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let third_generation: AttackSkill = AttackSkill {
            id: 2117,
            name: String::from("Third Generation"),
            player_id,
            potency: 680,
            trait_percent: 100,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2000,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(7, 1)],
            resource_created: HashMap::from([(3, 1)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let fourth_generation: AttackSkill = AttackSkill {
            id: 2118,
            name: String::from("Fourth Generation"),
            player_id,
            potency: 680,
            trait_percent: 100,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2000,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(7, 1)],
            resource_created: HashMap::from([(3, 1)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };

        let ouroboros: AttackSkill = AttackSkill {
            id: 2119,
            name: String::from("Ouroboros"),
            player_id,
            potency: 1150,
            trait_percent: 100,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 3000,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(7, 1)],
            resource_created: Default::default(),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };

        let awakened_filler: AttackSkill = AttackSkill {
            id: 2120,
            name: String::from("Awakened Filler"),
            player_id,
            potency: 280,
            trait_percent: 100,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 0,
            charging_time_millisecond: 0,
            is_speed_buffed: false,
            cooldown_reduced_by_speed: false,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(3, 1)],
            resource_created: Default::default(),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let reawaken_proc: AttackSkill = AttackSkill {
            id: 2121,
            name: String::from("Reawaken"),
            player_id,
            potency: 750,
            trait_percent: 100,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 2200,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![UseBuff(ready_to_reawaken.id)],
            resource_created: HashMap::from([(7, 5)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };
        let uncoiled_fury: AttackSkill = AttackSkill {
            id: 2122,
            name: String::from("Uncoiled Fury"),
            player_id,
            potency: 680,
            trait_percent: 100,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 3500,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(4, 1)],
            resource_created: HashMap::from([(1, 1), (2, 1)]),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };

        let death_rattle: AttackSkill = AttackSkill {
            id: 2123,
            name: String::from("Death Rattle"),
            player_id,
            potency: 280,
            trait_percent: 100,
            additional_skill_events: vec![],
            proc_events: vec![],
            combo: None,
            delay_millisecond: None,
            casting_time_millisecond: 0,
            gcd_cooldown_millisecond: 0,
            charging_time_millisecond: 0,
            is_speed_buffed: true,
            cooldown_reduced_by_speed: true,
            cooldown_millisecond: 0,
            resource_required: vec![Resource(8, 1)],
            resource_created: Default::default(),
            is_guaranteed_crit: false,
            current_cooldown_millisecond: 0,
            stacks: 1,
            stack_skill_id: None,
            is_guaranteed_direct_hit: false,
            use_type: UseType::UseOnTarget,
        };

        let potion_skill = PotionSkill::new(player_id);

        ViperDatabase {
            steel_fangs,
            dread_fangs,
            dreadwinder,
            hunters_sting,
            swiftskins_sting,
            flankstings_strike: flanksting_strike,
            flanksbane_fang,
            hindsting_strike,
            hindsbane_fang,
            normal_filler1,
            normal_filler2,
            hunters_coil,
            swiftskins_coil,
            serpents_ire,
            reawaken,
            first_generation,
            second_generation,
            third_generation,
            fourth_generation,
            ouroboros,
            reawaken_filler: awakened_filler,
            reawaken_proc,
            uncoiled_fury,
            death_rattle,

            hunters_instinct,
            swiftscaled,

            potion: potion_skill.potion,
        }
    }
}

pub(crate) fn make_viper_skill_list(player_id: PlayerIdType) -> SkillTable<AttackSkill> {
    let db = ViperDatabase::new(player_id);

    let viper_skill_list: Vec<AttackSkill> = vec![
        db.steel_fangs,
        db.dread_fangs,
        db.dreadwinder,
        db.hunters_sting,
        db.swiftskins_sting,
        db.flankstings_strike,
        db.flanksbane_fang,
        db.hindsting_strike,
        db.hindsbane_fang,
        db.normal_filler1,
        db.normal_filler2,
        db.hunters_coil,
        db.swiftskins_coil,
        db.serpents_ire,
        db.reawaken,
        db.first_generation,
        db.second_generation,
        db.third_generation,
        db.fourth_generation,
        db.ouroboros,
        db.reawaken_filler,
        db.reawaken_proc,
        db.uncoiled_fury,
        db.death_rattle,
        db.potion,
    ];

    make_skill_table(viper_skill_list)
}
